Java vers STM

Paquet : ID_PAQUET (16bits) + message + CHECKSUM (8 bits)
BIG ENDIAN (octet de poids fort en premier)
Checksum sur 8bits : somme des octets, puis non logique (comme AX12)

ping
    0x00
pong
    0x01
set vitesse
    0x10 PWM_ROT(8) PWM_TR(8)
avancer
    0x02 DISTANCE(16)
avancer dans mur
    0x03 DISTANCE(16)
tourner
    0x04 ANGLE(16)
utilise actionneurs
    0x06 NB_ORDRE(8)
stop le robot
    0x07
set xyo (init odométrie)
    0x08 X+(12) Y(12) ORIENTATION(16)
get xyo (test uniquement)
    0x09
supprime tous les hooks
    0x40
supprime certains hooks
    0x41 NB_HOOKS(8) ID1(8) ...

Hook : type param ID(8) NB_CALLBACK(8) callback

callback :
élément shooté
    0x00 + NB_ELT(6)
déclenche script
    0x40 + NB_SCRIPT(6)
ax12
    0x80 + NB_AX12(6) ANGLE(16)

Hook de date
    0x44 DATE(24)
Hook de demi-plan
    0x45 X+_POINT(12) Y_POINT(12) X+_DIRECTION(12) Y_DIRECTION(12)
Hook de position
    0x46 X+(12) Y(12) RAYON_CARRE(16)
Hook de position unique
    0x47 X+(12) Y(12) RAYON_CARRE(16)
Hook de contact
    0x48 NB_CAPT(8)
Hook de contact unique
    0x49 NB_CAPT(8)

STM vers Java
ping
    0x00
pong
    0x01
robot arrivé
    0x02
problème meca
    0x03
debut match
    0x04
match fini
    0x05
couleur robot 1
    0x06
couleur robot 2
    0x07
le robot est en marche avant
    0x08
le robot est en marche arrière
    0x09
info capteurs
    0x10 X+(12) Y(12) ORIENTATION(16) CPT1(12) CPT2(12) …
xyo
    0x11 X+(12) Y(12) ORIENTATION(16)
élément shooté
    0x40 + ID(6)

