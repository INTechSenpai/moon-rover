Java vers STM

set position et orientation TEST UNIQUEMENT
    sxyo x y angle_en_milliradians
get position et orientation TEST UNIQUEMENT
    gxyo

set vitesse
    sspd pwm_rotation pwm_translation
avancer
    d distance dans_mur nb_hook [hook]
tourner avec symétrie
    t angle_en_milliradians
actionneurs (protocole complet dans src/robot/ActuatorOrder.java)
    ordre_actionneur
stopper le robot (procédure d'urgence) et annule l'itinéraire en cours
    stop
envoie la liste des hooks valables pour tout le match. Chaque nouvel appel écrase ceux envoyés précédemment
    hlst nb_hook [hooks]
ajoute point à l'itinéraire
    add x_point y_point x_direction y_direction angle_en_milliradians rayon_courbure
commence un nouvel itinéraire (tourne dès maintenant)
    addf angle_en_milliradians rayon_courbure
termine un itinéraire
    addl x_point y_point

Inutilisés :
désactiver asservissement (rotation et translation)
    nas
activer asservissement (rotation et translation)
    oas


STM vers Java
le robot est arrivé à destination
    arv
blocage mécanique
    meca
un hook a été appelé
    hk id [param]
le match est fini
    end
le match commence
    go
la couleur du robot
    color couleur
infos des capteurs
    cpt x_robot y_robot orientation_robot portion_du_chemin mesure1 [mesure2 …]
un actionneur a un problème
    acpb
un actionneur a fini son mouvement
    acok
élément shooté
    tbl nb_elem
demande d'exécution de hook de script
    dhk nb_hook


Envoi de hook du Java à la STM

Hook de date
    hda date
Hook de position
    hpo x y tolerance
Hook de demi-plan
    hdp x_point y_point x_direction y_direction
Hook de contact
    hct nb_capteur

Puis le nombre de callback, puis ses callbacks
Un callback
    est_unique methode

Une méthode
    tbl nb_element done
ou
    scr nb_script param
ou
    act ordre_act

Exemple complet: un hook de position qui dit qu'un élément a été shooté
    hpo 20 1300 5 1 T tbl 18

