0x55 0xAA ID_PAQUET (16bits) + message + CHECKSUM (8 bits)
BIG ENDIAN (octet de poids fort en premier)
Checksum sur 8bits : somme des octets, puis non logique (comme AX12)

Java vers STM

ping
    0x3F
ping nouvelle connexion
    0x40
pong
    0x42 0x57
avancer
    0x02 DISTANCE(16)
tourner
    0x04 ANGLE(16)
va au point
    0x05 X+(12) Y(12)
utilise actionneurs
    0x06 NB_ORDRE(8)
stop le robot
    0x07
set xyo (init odométrie)
    0x08 X+(12) Y(12) ORIENTATION(16)
get xyo (test uniquement)
    0x09
set vitesse
    0x0A PWM_ROT(8) PWM_TR(8)
resend paquet
    0xFF ID_PAQUET(16)
supprime tous les hooks
    0x10
supprime certains hooks
    0x11 NB_HOOKS(8) ID1(8) ...
set pid vitesse gauche
    0x20 KP(16) KD(16)
set pid vitesse droite
    0x21 KP(16) KD(16)
set pid translation
    0x22 KP(16) KD(16)
set pid rotation
    0x23 KP(16) KD(16)
set pid courbure
    0x24 KP(16) KD(16)
set pid vitesse linéaire
    0x25 KP(16) KD(16)
set constante samson
    0x26 K1(16) K2(16)
envoie arc trajectoire courbe (vitesse négative et orientation inversée si marche arrière)
    0x2E X+_POINT(12) Y_POINT(12) ORIENTATION(16) COURBURE(16) VITESSE(8)
envoie arc trajectoire courbe précédé d'un arrêt (vitesse négative et orientation inversée si marche arrière)
    0x2F X+_POINT(12) Y_POINT(12) ORIENTATION(16) COURBURE(16) VITESSE(8)
active le mode debug
    0x0F

Hook : type param ID(8) NB_CALLBACK(8) callback

callback :
élément shooté
    0x00 + NB_ELT(6)
déclenche script
    0x40 + NB_SCRIPT(6)
ax12
    0x80 + NB_AX12(6) ANGLE(16)

Hook de date
    0x44 DATE(24)
Hook de demi-plan
    0x45 X+_POINT(12) Y_POINT(12) X+_DIRECTION(12) Y_DIRECTION(12)
Hook de position
    0x46 X+(12) Y(12) RAYON_CARRE(16)
Hook de contact
    0x48 NB_CAPT(8)
Hook de contact unique
    0x49 NB_CAPT(8)

STM vers Java
ping
    0x3F
pong
    0x54 0x33
robot arrivé
    0x02
problème meca
    0x03
debut match
    0x04
match fini
    0x05
couleur robot sans symétrie
    0x06
couleur robot avec symétrie
    0x07
info capteurs. Le robot est en marche avant
    0x0A X+(12) Y(12) ORIENTATION(16) COURBURE(8) CPT1(12) CPT2(12) …
info capteurs. Le robot est en marche arrière
    0x0B X+(12) Y(12) ORIENTATION(16) COURBURE(8) CPT1(12) CPT2(12) …
debug asser
    0x10 PWMgauche(16) PWMdroit(16) vitesseGauche(16) vitesseDroite(16) distance(16) orientation(16) vitesseLineaire(16) courbure(16)
xyo. Le robot est en marche avant
    0x0E X+(12) Y(12) ORIENTATION(16) COURBURE(8)
xyo. Le robot est en marche arrière
    0x0F X+(12) Y(12) ORIENTATION(16) COURBURE(8)
code coquillages
    0x0C CODE(8)
resend paquet
    0xFF ID_PAQUET(16)
élément shooté
    0x0D ID(8)
balise présente
    0x08
balise absente
    0x09
